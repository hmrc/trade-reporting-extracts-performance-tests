# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configure here your journeys. A journey is a sequence of requests at a certain load.

journeys {

  # Example
  # Give a name to the journey.
  tre-reports = {

    # The description will appear in the test report. Use something meaningful
    description = "TRE Reports"

    # The load is in journeys per second. Put here the load you are going to have at the peak.
    # There is no need to put a higher value at this point. Use prerftest.loadPercentage in application.conf instead.

    # Calculation:
    #                     /Days   /Hours  /Minutes  /Seconds
    # ((((Reports a month /30)    /24)    /60)      /60)      x   SecondsTakenToCompleteJourney.
    # 10,500 reports a month, at on average 60s to complete   = 0.24 (rounded).
    # 80,000 reports a month, at on average 60s to complete   = 1.85
    #  8,000 reports a day, at on average 60s to complete     = 5.55
    load = 0.24
    
    # This points to a csv file with the data you need to inject in the journey. [More here](https://github.com/hmrc/performance-test-runner#step-4-configure-the-user-feeder)
    # feeder = data/example.csv

    # The parts your journey is made of. A part is made one or more requests.
    parts = [
      login-and-request-new-report
      login-and-check-available-reports
      login-and-check-downloadable-reports
    ]
  }

}


# Default behaviour is to run all journeys. If that is not what you need you can specify the list of journeys to run
#journeysToRun = [
#   hello-world-1,
#   hello-world-3
#]

# You can specify the same list of journeys via environment variables:
# journeysToRun.0 = hello-world-1
# journeysToRun.1 = hello-world-3
